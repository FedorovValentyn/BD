/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 26
1. Команди вибірки записів з таблиці MySQL. Завдання критеріїв відбору записів.
Обмеження числа рядків результату вибірки, сортування і групування відібраних записів.
(10 балів)

У MySQL для вибірки записів з таблиці використовується команда SELECT. Вона дає можливість
задавати критерії відбору, обмеження кількості повернутих рядків, сортування та групування результатів.
Ось деякі основні варіанти використання:
1.    Простий вибір усіх полів усіх записів з таблиці:
SELECT * FROM table_name;
2.    Вибір конкретних полів усіх записів з таблиці:
SELECT column1, column2, ... FROM table_name;
3.    Вибір з умовами за допомогою WHERE:
SELECT * FROM table_name WHERE condition;
4.	Обмеження кількості записів, які повертається, за допомогою LIMIT:
SELECT * FROM table_name LIMIT number_of_rows;
5.    Сортування результатів за допомогою ORDER BY:
SELECT * FROM table_name ORDER BY column_name [ASC|DESC];
6.    Групування результатів за допомогою GROUP BY:
SELECT column1, COUNT(*) FROM table_name GROUP BY column1;


2. Значення та синтаксис функції IF(), приклад. (10 балів)

Функція IF() використовується для визначення умови та повернення різних значень в залежності від цієї умови. Ось синтаксис цієї функції:
IF(condition, value_if_true, value_if_false)
Ця функція приймає три аргументи:
condition – умова, яку потрібно перевірити.
value_if_true – значення, яке повернеться, якщо умова виконується.
value_if_false – значення, яке повернеться, якщо умова не виконується.

Наприклад, якщо потрібно перевірити, чи є число x більше 0 і повернути різні рядки у залежності від цієї умови, можна використати IF():
SELECT IF(x > 0, 'Positive', 'Not Positive') AS result;


3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про три найбільші по кількості постачання товарів EPSON або
Samsung. Динамічний набір записів повинен містити такі поля: Номер
контракту, Назва дистриб’ютора, Адреса дистриб’ютора, Кількість, Шифр.
 груповий запит, що виводить загальну вартість товарів, у яких кількість
менше за середню кількість по всім контрактам.
 Створити перехресний запит, який би відтворювався наступною таблицею:
Найменування товару Seiko EPSON
Corporation …
Samsung Brands
Electronis
Сканер HP Scanjet 2200c Загальна вартість … Загальна вартість
… … … …
Монітор 19" Samsung
SyncMaster 957DFX
Загальна вартість … Загальна вартість
Вартість розраховуються як добуток ціни товару на кількість поставленого товару на
коефіцієнт перерахунку. Якщо код валюти поставленого товару дорівнює 001, то
коефіцієнт перерахунку дорівнює 7,45, в іншому випадку дорівнює 1*/



CREATE DATABASE variant_26;

USE variant_26;

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_type_code INT,
    item_price INT,
    item_valute_code VARCHAR(10)
);

CREATE TABLE dist(
    dist_id INT PRIMARY KEY,
    dist_name VARCHAR(55),
    dist_address VARCHAR(55)
);

CREATE TABLE contracts(
    contract_id INT PRIMARY KEY,
    contract_dist_id INT,
    contract_item_id INT,
    contract_quantity INT
);

CREATE TABLE valute(
    valute_id VARCHAR(3) PRIMARY KEY,
    valute_name VARCHAR(55),
    valute_short VARCHAR(3)
);

CREATE TABLE types(
    type_code INT PRIMARY KEY,
    type_name VARCHAR(55)
);


ALTER TABLE items
ADD CONSTRAINT item_type_code_fk
FOREIGN KEY (item_type_code) REFERENCES types(type_code),
ADD CONSTRAINT item_valute_code_fk
FOREIGN KEY (item_valute_code) REFERENCES valute(valute_id);

ALTER TABLE contracts
ADD CONSTRAINT contract_dist_code_fk
FOREIGN KEY (contract_dist_id) REFERENCES dist(dist_id),
ADD CONSTRAINT contracts_item_code_fk
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);

#1
SELECT
    contract_id AS "Номер контракту",
    dist_name AS "Назва дистриб'ютора",
    dist_address AS "Адреса дистриб'ютора",
    contract_quantity AS "Кількість",
    valute_short AS "Шифр"
FROM
    contracts
JOIN dist ON contract_dist_id = dist_id
JOIN items ON contract_item_id = item_id
JOIN valute ON item_valute_code = valute_id
WHERE
    item_name LIKE '%EPSON%' OR item_name LIKE '%Samsung%'
ORDER BY
    contract_quantity DESC
LIMIT 3;


#2
SELECT
    item_name AS "Назва товару",
    SUM(IF(item_valute_code = 001, contract_quantity * item_price * 7.45, contract_quantity * item_price)) AS "Загальна вартість"
FROM
    contracts
JOIN items ON contract_item_id = item_id
WHERE
    contract_quantity < (SELECT AVG(contract_quantity) FROM contracts)
GROUP BY
    item_name;

#3


SELECT
    item_name AS "Найменування товару",
    SUM( CASE WHEN item_name LIKE '%EPSON%' THEN contract_quantity * item_price *
        CASE
            WHEN item_valute_code = 1 THEN 7.45
            ELSE 1
        END
    ELSE 0 END) AS "Seiko EPSON Corporation",
    SUM(CASE WHEN item_name LIKE '%Samsung%' THEN contract_quantity * item_price *
        CASE
            WHEN item_valute_code = 1 THEN 7.45
            ELSE 1
        END
    ELSE 0 END) AS "Samsung Brands Electronis",
     SUM(CASE WHEN item_name LIKE '%HP%' THEN contract_quantity * item_price *
        CASE
            WHEN item_valute_code = 1 THEN 7.45
            ELSE 1
        END
    ELSE 0 END) AS "Hewlett-Pacrard"
FROM
    contracts
JOIN items ON contract_item_id = item_id
GROUP BY
    item_name;