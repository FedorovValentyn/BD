/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 3
1. Синтаксис команди підключення до сервера MySQL. Приклади команд
підключення до сервера MySQL. (10 балів)
НАЗВА
      \connect - Підключає shell до сервера MySQL і призначає глобальний сеанс.
СИНТАКСИС
      \connect [<TYPE>] <URI>
      \c [<TYPE>] <URI>
ПОНЯТТЯ
      TYPE є необов’язковим параметром для визначення типу сеансу. Приймає такі значення:
      - --mc, --mysql: створює сенс класичного протоколу MySQL (default port 3306)
      - --mx, --mysqlx: створює сеанс X протоколу (default port 33060)
     Якщо TYPE пропущено, виконується автоматичне визначення протоколу, якщо протокол не вказано в URI. Формат URI: [user[:password]@]hostname[:port]
ПРИКЛАД
      \connect --mx root@localhost
            Створює глобальний сеанс за допомогою протоколу X для вказаного URI.


2. Значення та синтаксис функції LAST_DAY(), приклад. (10 балів)
Функція LAST_DAY() використовується для отримання останнього дня місяця для заданої дати. Вона повертає дату останнього дня того ж місяця, що й вхідна дата. Ось синтаксис цієї функції:
LAST_DAY(date)
date – це дата або вираз дати, для якої ви хочете отримати останній день місяця.
Наприклад, якщо вам потрібно знайти останній день поточного місяця, ви можете використати LAST_DAY() так:
SELECT LAST_DAY(NOW());


3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про замовлення за другий квартал. Динамічний набір записів повинен
містити такі поля: Номер замовлення, Найменування товару, Назва фірми,
Кількість, Ціна, Вартість. Дані впорядкувати по алфавіту назв фірм, а в
межах однієї групи – по назві товару.
 груповий запит, що виводить загальну кількість контрактів для кожної
фірми.
 запит на зовнішнє об’єднання, який повинен містити дистріб'юторів, які не
замовляли товари Samsung.
Вартість розраховуються як добуток ціни товару на кількість замовленого товару. Якщо
назва країни дистріб'ютора США, то ціна збільшується на 4,5%, в іншому випадку - ціна
залишається незмінною.
*/

CREATE DATABASE variant_3;

USE variant_3;

CREATE TABLE dist(
    dist_id INT PRIMARY KEY,
    dist_name VARCHAR(55),
    dist_address VARCHAR(80),
    dist_country VARCHAR(55)
);

CREATE TABLE orders(
    order_id INT PRIMARY KEY,
    order_dist_id INT,
    order_date DATE,
    order_paymnet_date DATE
);

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_price INT
);

CREATE TABLE contracts(
    contract_uniq INT PRIMARY KEY AUTO_INCREMENT,
    contract_order_id INT,
    contract_item_id INT,
    contract_quantity INT
);
ALTER TABLE orders
ADD CONSTRAINT orders_dist_id_fk
FOREIGN KEY (order_dist_id) REFERENCES dist(dist_id);

ALTER TABLE contracts
ADD CONSTRAINT contracts_order_id_fk
FOREIGN KEY (contract_order_id) REFERENCES orders(order_id),
ADD CONSTRAINT contracts_item_id
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);



#1
SELECT
    order_id AS "Номер замовлення",
    item_name AS "Найменування товару",
    dist_name AS "Назва фірми",
    contract_quantity AS "Кількість",
    item_price as "Ціна",
    (IF(dist_country LIKE 'USA', item_price * contract_quantity * 1.045,item_price * contract_quantity)) AS "Вартість"

FROM contracts
JOIN orders ON contract_order_id = order_id
JOIN items ON contract_item_id = item_id
JOIN dist ON order_dist_id = dist_id
WHERE QUARTER(order_date) = 2
ORDER BY dist_name ASC, item_name ASC;

#2
SELECT
    dist_name AS "Назва фірми",
    COUNT(contract_order_id) AS "Кількість контрактів"
FROM
    contracts
JOIN orders ON contract_order_id = order_id
JOIN dist ON order_dist_id = dist_id
GROUP BY dist_name
ORDER BY dist_name ASC;

#3
SELECT DISTINCT
    dist_name AS "Назва дистриб'ютора"
FROM
    dist
WHERE
    dist_id NOT IN (
        SELECT order_dist_id
        FROM orders
        JOIN contracts ON orders.order_id = contracts.contract_order_id
        JOIN items ON contracts.contract_item_id = items.item_id
        WHERE item_name LIKE '%Samsung%'
    );