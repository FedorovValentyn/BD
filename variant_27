/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 27
1. Групові запити. Використання агрегуючих функцій для отримання підсумкових
результатів з таблиць MySQL. (10 балів)

Групові запити дозволяють використовувати агрегуючі функції для отримання
підсумкових результатів для груп рядків у таблиці. Ось деякі агрегуючі функції та їх використання:
1.	COUNT(): Ця функція рахує кількість рядків у групі.
SELECT category, COUNT(*) AS count
FROM products
GROUP BY category;
2.    SUM(): Ця функція обчислює суму значень у групі.
SELECT category, SUM(price) AS total_price
FROM products
GROUP BY category;
3.    AVG(): Ця функція обчислює середнє значення у групі.
SELECT category, AVG(price) AS average_price
FROM products
GROUP BY category;
4.    MIN() і MAX(): Ці функції знаходять мінімальне та максимальне значення у групі відповідно.
SELECT category, MIN(price) AS min_price, MAX(price) AS max_price
FROM products
GROUP BY category;
5.    GROUP BY: Використовується для групування рядків за певними стовпцями.
SELECT city, COUNT(*) AS users_count
FROM users
GROUP BY city;
6.    HAVING: Використовується для фільтрації результатів групового запиту.
SELECT category, AVG(price) AS average_price
FROM products
GROUP BY category
HAVING AVG(price) > 50;


2. Значення та синтаксис функції CHAR_LENGTH(), приклад. (10 балів)

Функція CHAR_LENGTH() використовується для отримання кількості символів у рядку.
Вона повертає кількість символів, а не байтів, у вказаному рядку тексту. Ось синтаксис цієї функції:
CHAR_LENGTH(string)
Де:
·       string - це рядок або значення, довжину якого ви хочете знайти.
Наприклад, якщо вам потрібно знайти кількість символів у рядку 'Hello World':
SELECT CHAR_LENGTH('Hello World');

3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про замовлення за другий квартал. Динамічний набір записів повинен
містити такі поля: Номер замовлення, Найменування товару, Назва фірми,
Кількість, Ціна, Вартість. Дані впорядкувати по алфавіту назв фірм, а в
межах однієї групи – по назві товару.
 груповий запит, що виводить загальну кількість контрактів для кожної
фірми.
 запит на зовнішнє об’єднання, який повинен містити дистріб'юторів, які не
замовляли товари Samsung.
Вартість розраховуються як добуток ціни товару на кількість замовленого товару. Якщо
назва країни дистріб'ютора США, то ціна збільшується на 4,5%, в іншому випадку - ціна
залишається незмінною.
*/

CREATE DATABASE variant_27;

USE variant_27;

CREATE TABLE dist(
    dist_id INT PRIMARY KEY,
    dist_name VARCHAR(55),
    dist_address VARCHAR(80),
    dist_country VARCHAR(55)
);

CREATE TABLE orders(
    order_id INT PRIMARY KEY,
    order_dist_id INT,
    order_date DATE,
    order_paymnet_date DATE
);

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_price INT
);

CREATE TABLE contracts(
    contract_uniq INT PRIMARY KEY AUTO_INCREMENT,
    contract_order_id INT,
    contract_item_id INT,
    contract_quantity INT
);


ALTER TABLE orders
ADD CONSTRAINT orders_dist_id_fk
FOREIGN KEY (order_dist_id) REFERENCES dist(dist_id);

ALTER TABLE contracts
ADD CONSTRAINT contracts_order_id_fk
FOREIGN KEY (contract_order_id) REFERENCES orders(order_id),
ADD CONSTRAINT contracts_item_id
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);



#1
SELECT
    order_id AS "Номер замовлення",
    item_name AS "Найменування товару",
    dist_name AS "Назва фірми",
    contract_quantity AS "Кількість",
    item_price as "Ціна",
    ROUND(IF(dist_country LIKE 'USA', item_price * contract_quantity * 1.045,item_price * contract_quantity),2) AS "Вартість"

FROM contracts
JOIN orders ON contract_order_id = order_id
JOIN items ON contract_item_id = item_id
JOIN dist ON order_dist_id = dist_id
WHERE QUARTER(order_date) = 2
ORDER BY dist_name ASC, item_name ASC;

#2
SELECT
    dist_name AS "Назва фірми",
    COUNT(contract_order_id) AS "Кількість контрактів"
FROM
    contracts
JOIN orders ON contract_order_id = order_id
JOIN dist ON order_dist_id = dist_id
GROUP BY dist_name
ORDER BY dist_name ASC;

#3
SELECT DISTINCT
    dist_name AS "Назва дистриб'ютора"
FROM
    dist
WHERE
    dist_id NOT IN (
        SELECT order_dist_id
        FROM orders
        JOIN contracts ON order_id = contract_order_id
        JOIN items ON contract_item_id = item_id
        WHERE item_name LIKE '%Samsung%'
    );
