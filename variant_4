/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 4
1. Команди створення бази даних MySQL і команди створення таблиці в базі даних.
Параметр «опис стовпця». Типи даних в стовпчиках таблиці. (10 балів)
  Щоб створити базу даних, треба скористатися наступною командою:
CREATE DATABASE назва_бази_даних;
Щоб створити таблицю в базі даних, вам потрібно вказати ім'я таблиці, список полів та їх властивості. Ось приклад команди для створення таблиці:
CREATE TABLE ім'я_таблиці ( поле1 тип_даних_поля1 опис_стовпця1, поле2 тип_даних_поля2 опис_стовпця2, ... );
Типи даних можуть включати:
INT - ціле число,
VARCHAR(size) - рядок з фіксованою довжиною,
TEXT - текстове поле,
DATE - дата,
DATETIME - дата та час,
BOOL або BOOLEAN - логічний тип,
інші.
Опис стовпця може включати такі параметри, як NOT NULL (значення не може бути порожнім),
PRIMARY KEY (примусово унікальне значення для кожного запису),
AUTO_INCREMENT (значення автоматично збільшується) та інші.

2. Значення та синтаксис функції DATE_FORMAT(), приклад. (10 балів)
Функція DATE_FORMAT() використовується для форматування дати або часу у зручний для вас вигляд. Вона дозволяє змінити представлення дати або часу на текстовий рядок за допомогою певного формату. Ось синтаксис цієї функції:
DATE_FORMAT(date, format)
date - це дата або вираз дати, яку ви хочете отформатувати.
format - це рядок, який визначає формат, у який ви хочете перетворити дату або час.
Наприклад, якщо вам потрібно отримати поточну дату в форматі "рік-місяць-день", ви можете використати DATE_FORMAT() так:
SELECT DATE_FORMAT(NOW(), '%Y-%m-%d');


3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про не сплачені замовлення товарів на 12.08.2004. Динамічний набір
записів повинен містити такі поля: Номер замовлення, Назва фірми, Адреса,
Дата замовлення, Дата сплати.
 груповий запит, що виводить загальну вартість товарів, у яких кількість
менше за середню кількість по всім продажам.
 перехресний запит, який би відтворювався наступною таблицею:
Назва фірми 07 2004 08 2004
Івано-Франківська
торгово-проми-слова
палата
Загальна вартість Загальна вартість
… … …
СП “Ліссервіс” Загальна вартість Загальна вартість
Вартість розраховуються як добуток ціни товару на кількість замовленого товару. Якщо
Вид замовлення “Самовивіз”, то ціна зменшується на 3,5%, в іншому випадку - ціна
залишається незмінною*/


CREATE DATABASE variant_4;

USE variant_4;


CREATE TABLE firms(
    firm_id INT PRIMARY KEY,
    firm_name VARCHAR(55),
    firm_address VARCHAR(55),
    firm_code NUMERIC
);

CREATE TABLE orders(
    order_id INT PRIMARY KEY,
    order_firm_id INT,
    order_type_id INT,
    order_date DATE,
    order_payment_date DATE
);

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_price INT
);

CREATE TABLE contracts(
    contract_uniq INT PRIMARY KEY AUTO_INCREMENT,
    contract_order_id INT,
    contract_item_id INT,
    contract_quantity INT
);

CREATE TABLE types(
    type_id INT PRIMARY KEY,
    type_name VARCHAR(55)
);

ALTER TABLE orders
ADD CONSTRAINT order_firm_id_fk
FOREIGN KEY (order_firm_id) REFERENCES firms(firm_id),
ADD CONSTRAINT order_type_id_fk
FOREIGN KEY (order_type_id) REFERENCES types(type_id);


ALTER TABLE contracts
ADD CONSTRAINT contract_order_id_fk
FOREIGN KEY (contract_order_id) REFERENCES orders(order_id),
ADD CONSTRAINT contract_item_id_fk
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);


#1
SELECT  order_id AS "Номер замовлення",  firm_name AS "Назва фірми", firm_address AS "Адреса",  order_date AS "Дата замовлення",
        order_payment_date AS "Дата сплати"

FROM    orders

JOIN    firms ON order_firm_id = firm_id

WHERE   order_payment_date IS NULL  AND order_date <= '2004-08-12';

#2
SELECT  item_id AS "ID товару",
        item_name AS "Назва товару",
        SUM(IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price)) AS "Загальна вартість"
FROM contracts
JOIN items ON contract_item_id = item_id
JOIN orders ON contract_order_id = order_id
JOIN types ON order_type_id = type_id
WHERE contract_quantity < (SELECT AVG(contract_quantity) FROM contracts)
GROUP BY item_id;

#3
SELECT
    firm_name AS "Назва фірми",
    SUM(CASE
        WHEN MONTH(order_date) = 7 AND YEAR(order_date) = 2004
        THEN IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price) END) AS "07 2004",
    SUM(CASE
        WHEN MONTH(order_date) = 8 AND YEAR(order_date) = 2004
        THEN IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price) END) AS "08 2004"

FROM firms

JOIN orders ON firm_id = order_firm_id
JOIN contracts ON order_id = contract_order_id
JOIN items ON contract_item_id = item_id
JOIN types ON order_type_id = type_id

GROUP BY firm_name;