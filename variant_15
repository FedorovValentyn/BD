/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 15
1. Запити на модифікацію записів (delete, update insert) в таблиці MySQL. (10 балів)

INSERT [INTO] table_name [(columns_list)] VALUES (value_1, value_2, ... value_n)
INSERT Products (ProductName, Manufacturer, ProductCount, Price)
VALUES ('iPhone X', 'Apple', 5, 76000);
UPDATE table_name
SET column_1 = value_1, column_2 = value_2, ... column_n = value_n
[WHERE update_condition]
UPDATE Products
SET Manufacturer = 'Samsung',
ProductCount = ProductCount + 3
WHERE Manufacturer = 'Samsung Inc.';
DELETE FROM table_name
[WHERE delete_condition]
DELETE FROM Products
WHERE Manufacturer='Huawei';


2. Значення та синтаксис функції SUBSTRING(), приклад. (10 балів)

Функція SUBSTRING() витягує підстроку з рядка, починаючи з вказаної позиції. У MySQL вона може бути використана у двох форматах:
SUBSTRING('<Строка>', < Позиція>, [< Довжина>])
Наприклад: `SUBSTRING('Привіт світ', 7, 4)` витягне "світ" з рядка "Привіт світ".
SUBSTRING('<Строка>' FROM < Позиція> FOR [< Довжина>])
Наприклад: `SUBSTRING('Привіт світ' FROM 7 FOR 4)` також витягне "світ".


3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про не сплачені замовлення товарів на 12.04.2004. Динамічний набір
записів повинен містити такі поля: Номер замовлення, Назва дистріб'ютора,
Адреса дистріб'ютора, Дата замовлення, Дата сплати.
 груповий запит, що виводить загальну кількість товарів, у яких ціна більше
за середню ціну всіх товарів.
 перехресний запит, який би відтворювався наступною таблицею:
Назва дистріб'ютора 2 квартал 3 квартал
"August Gumplmayr" Загальна вартість Загальна вартість
… … …
"Cerdec ag" Загальна вартість Загальна вартість
Вартість розраховуються як добуток ціни товару на кількість замовленого товару. Якщо
назва країни дистріб'ютора Великобрітанія, то ціна збільшується на 4,5%, в іншому
випадку - ціна залишається незмінною*/

CREATE DATABASE variant_15;

USE variant_15;

CREATE TABLE dist(
    dist_id INT PRIMARY KEY,
    dist_name VARCHAR(55),
    dist_address VARCHAR(55),
    dist_country VARCHAR(30)
);

CREATE TABLE orders(
    order_id INT PRIMARY KEY,
    order_dist_id INT,
    order_date DATE,
    order_payment_date DATE
);

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_price INT
);

CREATE TABLE contracts(
    contract_uniq INT PRIMARY KEY AUTO_INCREMENT,
    contract_order_id INT,
    contract_item_id INT,
    contract_quantity INT
);

ALTER TABLE orders
ADD CONSTRAINT order_dist_id_fk
FOREIGN KEY (order_dist_id) REFERENCES dist(dist_id);

ALTER TABLE contracts
ADD CONSTRAINT contract_order_id_fk
FOREIGN KEY (contract_order_id) REFERENCES orders(order_id),
ADD CONSTRAINT contract_item_id_fk
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);


#1
SELECT
    order_id AS "Номер замовлення",
    dist_name AS "Назва дистриб'ютора",
    dist_address AS "Адреса дистриб'ютора",
    order_date AS "Дата замовлення",
    order_payment_date AS "Дата сплати"
FROM
    orders
JOIN dist ON order_dist_id = dist_id
WHERE
    (order_payment_date IS NULL OR order_payment_date > '2004-04-12')
    AND order_date <= '2004-04-12';

#2
SELECT
    item_name,
    COUNT(contract_quantity) AS item_count
FROM contracts
JOIN items ON contract_item_id = item_id
WHERE item_price > (SELECT AVG(item_price) FROM items)
GROUP BY item_name;


#3
SELECT
    dist_name AS distributor_name,
    SUM(CASE
        WHEN QUARTER(order_date) = 2 THEN
            contract_quantity *
            (CASE
                WHEN dist_country = 'United Kingdom' THEN item_price * 1.045
                ELSE item_price
            END)
        ELSE 0
    END) AS Q2_total_value,
    SUM(CASE
        WHEN QUARTER(order_date) = 3 THEN
            contract_quantity *
            (CASE
                WHEN dist_country = 'United Kingdom' THEN item_price * 1.045
                ELSE item_price
            END)
        ELSE 0
    END) AS Q3_total_value
FROM dist
JOIN orders ON dist_id = order_dist_id
JOIN contracts ON order_id = contract_order_id
JOIN items ON contract_item_id = item_id
GROUP BY dist_name;
