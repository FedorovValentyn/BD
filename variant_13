/*ЕКЗАМЕНАЦІЙНИЙ БІЛЕТ № 13
1. Команди MySQL, що реалізують вкладені запити. Прості вкладені запити. (10
балів)

Прості вкладені запити у MySQL можна використовувати для отримання більш деталізованої
інформації або фільтрації результатів. Вот кілька прикладів:

Вкладений запит у виразі SELECT:
SELECT column1, (SELECT column2 FROM table2 WHERE condition) AS nested_result
FROM table1
WHERE condition;
Приклад: Вибрати ім'я клієнта та кількість його замовлень.
SELECT name, (SELECT COUNT(*) FROM orders WHERE customer_id = customers.id) AS order_count
FROM customers;

Вкладений запит у виразі FROM:
SELECT column1, column2
FROM (SELECT column1, column2 FROM table1 WHERE condition) AS subquery_alias;
Приклад: Вибрати всі замовлення з товаром, ціна якого більше середньої ціни.
SELECT *
FROM (SELECT * FROM orders WHERE product_price > (SELECT AVG(product_price) FROM orders)) AS high_priced_orders;

Вкладений запит у виразі WHERE:
SELECT column1, column2
FROM table1
WHERE column1 = (SELECT column1 FROM table2 WHERE condition);
Приклад: Вибрати всі замовлення для товару з певною категорією.
SELECT *
FROM orders
WHERE product_id IN (SELECT product_id FROM products WHERE category = 'Electronics');

Ці приклади демонструють використання простих вкладених запитів для отримання більш конкретних результатів.


2. Значення та синтаксис функції NOW(), приклад. (10 балів)

Функція NOW() повертає поточну дату і час. Дата і час повертаються у форматі
"РРРР-ММ-ДД ГГ:ХХ:СС" (рядок) або у вигляді YYYYMMDDHHMMSS.uuuuuu (число).
 Приклад:
SELECT NOW() AS CurrentDateTime;
Результат:
‘2023-12-14 14:00:00’


3. Практичне завдання (20 балів).
Відповідно до виданих таблиць створити в MySQL базу даних.
Створити до бази наступні запити:
 запит про не сплачені замовлення товарів на 12.08.2004. Динамічний набір
записів повинен містити такі поля: Номер замовлення, Назва фірми, Адреса,
Дата замовлення, Дата сплати.
 груповий запит, що виводить загальну вартість товарів, у яких кількість
менше за середню кількість по всім продажам.
 перехресний запит, який би відтворювався наступною таблицею:
Назва фірми 07 2004 08 2004
Івано-Франківська
торгово-проми-слова
палата
Загальна вартість Загальна вартість
… … …
СП “Ліссервіс” Загальна вартість Загальна вартість
Вартість розраховуються як добуток ціни товару на кількість замовленого товару. Якщо
Вид замовлення “Самовивіз”, то ціна зменшується на 3,5%, в іншому випадку - ціна
залишається незмінною*/

CREATE DATABASE variant_13;

USE variant_13;


CREATE TABLE firms(
    firm_id INT PRIMARY KEY,
    firm_name VARCHAR(55),
    firm_address VARCHAR(55),
    firm_code VARCHAR(55)
);

CREATE TABLE orders(
    order_id INT PRIMARY KEY,
    order_firm_id INT,
    order_type_id INT,
    order_date DATE,
    order_payment_date DATE
);

CREATE TABLE items(
    item_id INT PRIMARY KEY,
    item_name VARCHAR(55),
    item_price INT
);

CREATE TABLE contracts(
    contract_uniq INT PRIMARY KEY AUTO_INCREMENT,
    contract_order_id INT,
    contract_item_id INT,
    contract_quantity INT
);

CREATE TABLE types(
    type_id INT PRIMARY KEY,
    type_name VARCHAR(55)
);

ALTER TABLE orders
ADD CONSTRAINT order_firm_id_fk
FOREIGN KEY (order_firm_id) REFERENCES firms(firm_id),
ADD CONSTRAINT order_type_id_fk
FOREIGN KEY (order_type_id) REFERENCES types(type_id);


ALTER TABLE contracts
ADD CONSTRAINT contract_order_id_fk
FOREIGN KEY (contract_order_id) REFERENCES orders(order_id),
ADD CONSTRAINT contract_item_id_fk
FOREIGN KEY (contract_item_id) REFERENCES items(item_id);


#1
SELECT  order_id AS "Номер замовлення",  firm_name AS "Назва фірми", firm_address AS "Адреса",  order_date AS "Дата замовлення",
        order_payment_date AS "Дата сплати"

FROM    orders

JOIN    firms ON order_firm_id = firm_id

WHERE   order_payment_date IS NULL  AND order_date <= '2004-08-12';

#2
SELECT  item_id AS "ID товару",
        item_name AS "Назва товару",
        SUM(IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price)) AS "Загальна вартість"
FROM contracts
JOIN items ON contract_item_id = item_id
JOIN orders ON contract_order_id = order_id
JOIN types ON order_type_id = type_id
WHERE contract_quantity < (SELECT AVG(contract_quantity) FROM contracts)
GROUP BY item_id;

#3
SELECT
    firm_name AS "Назва фірми",
    SUM(CASE
        WHEN MONTH(order_date) = 7 AND YEAR(order_date) = 2004
        THEN IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price) END) AS "07 2004",
    SUM(CASE
        WHEN MONTH(order_date) = 8 AND YEAR(order_date) = 2004
        THEN IF(type_id = 2, contract_quantity * item_price * 0.965, contract_quantity * item_price) END) AS "08 2004"

FROM firms

JOIN orders ON firm_id = order_firm_id
JOIN contracts ON order_id = contract_order_id
JOIN items ON contract_item_id = item_id
JOIN types ON order_type_id = type_id

GROUP BY firm_name;